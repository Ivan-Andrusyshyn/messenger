{"version":3,"file":"static/js/592.cd275cf2.chunk.js","mappings":"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","sources":["components/ChatInfo/TextChat/Text.tsx","components/ChatInfo/Chatinfo.tsx","components/Loader/Loader.tsx","components/dataFetch/dataFetch.ts"],"sourcesContent":["import { ChangeEvent, FC, useState } from \"react\";\r\nimport \"./text.css\";\r\nimport React from \"react\";\r\nexport const Text: FC = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [textArray, setTextArray] = useState(\"\");\r\n\r\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setText(e.currentTarget.value);\r\n  const handleSubmit = (e: ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setTextArray(text);\r\n  };\r\n  return (\r\n    <div className=\"text-container\">\r\n      {textArray && (\r\n        <div className=\"message-wrap\">\r\n          <p>{textArray}</p>\r\n        </div>\r\n      )}\r\n      <form className=\"chat-input\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Введите сообщение\"\r\n          onChange={handleOnChange}\r\n        />\r\n        <button type=\"submit\">Отправить</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport \"./chatinfo.css\";\r\nimport { Loader } from \"../Loader/Loader\";\r\nimport { Text } from \"./TextChat/Text\";\r\nimport React from \"react\";\r\nimport { fetchTextChat } from \"../dataFetch/dataFetch\";\r\ninterface chatIdParams extends Record<string, string | undefined> {\r\n  chatId: string;\r\n}\r\ninterface APIEntry {\r\n  API: string;\r\n  Description?: string;\r\n}\r\nconst Chatinfo: React.FC = () => {\r\n  const { chatId } = useParams<chatIdParams>();\r\n  const [list, setList] = useState<APIEntry[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const validChatId = chatId || \"\";\r\n    fetchTextChat(validChatId, setLoading, setList);\r\n  }, [chatId]);\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        list.map(({ API, Description }) => (\r\n          <div key={API} className=\"name-contact\">\r\n            <h1 className=\"title\">{API}</h1>\r\n            <p className=\"description\">{Description}</p>\r\n          </div>\r\n        ))\r\n      )}\r\n      <Text />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatinfo;\r\n","import React, { FC } from \"react\";\r\nimport \"./loader.css\";\r\nconst Loader: FC = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"part\"></div>\r\n      <div className=\"part\"></div>\r\n      <div className=\"part\"></div>\r\n    </div>\r\n  );\r\n};\r\nexport { Loader };\r\n","import axios from \"axios\";\r\ninterface APIEntry {\r\n  API: string;\r\n  Description?: string;\r\n}\r\n\r\nconst baseUrl = \"https://api.publicapis.org/entries\";\r\n\r\nconst fetchBase = async (): Promise<APIEntry[]> => {\r\n  const { data } = await axios.get(`${baseUrl}`);\r\n  const listInfo = data.entries.slice(10, 26);\r\n  return listInfo;\r\n};\r\nexport const fetchData = async (): Promise<void> => {\r\n  try {\r\n    const data: APIEntry[] = await fetchBase();\r\n    const localItems: APIEntry[] = JSON.parse(\r\n      localStorage.getItem(\"contact\") || \"[]\"\r\n    );\r\n    if (localItems.length === 0) {\r\n      localStorage.setItem(\"contact\", JSON.stringify(data));\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const fetchTextChat = async (\r\n  chatId: string,\r\n  setLoading: Function,\r\n  setList: Function\r\n): Promise<void> => {\r\n  try {\r\n    setLoading(true);\r\n    const data: APIEntry[] = await fetchBase();\r\n    const filter = data.filter(({ API }) => API === chatId);\r\n    setList(filter);\r\n  } catch (err) {\r\n    console.log(err);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n"],"names":["Text","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","textArray","setTextArray","_jsxs","className","children","_jsx","onSubmit","e","preventDefault","type","placeholder","onChange","currentTarget","value","chatId","useParams","list","setList","loading","setLoading","useEffect","validChatId","fetchTextChat","Loader","map","_ref","API","Description","fetchBase","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","listInfo","wrap","_context","prev","next","axios","get","concat","sent","entries","slice","abrupt","stop","apply","arguments","fetchData","_ref2","_callee2","_context2","JSON","parse","localStorage","getItem","length","setItem","stringify","t0","console","log","_ref3","_callee3","filter","_context3","_ref4","finish","_x","_x2","_x3"],"sourceRoot":""}