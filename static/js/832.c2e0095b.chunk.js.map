{"version":3,"file":"static/js/832.c2e0095b.chunk.js","mappings":"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","sources":["components/Loader/Loader.tsx","components/SideBar/Search/SearchComponent.tsx","components/SideBar/supportTS/randomOnline.ts","components/SideBar/ListContact/ListContact.tsx","components/SideBar/Sidebar.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport \"./loader.css\";\r\nconst Loader: FC = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"part\"></div>\r\n      <div className=\"part\"></div>\r\n      <div className=\"part\"></div>\r\n    </div>\r\n  );\r\n};\r\nexport { Loader };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./search.css\";\r\ninterface Props {\r\n  handleOnChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const SearchComponent: React.FC<Props> = ({ handleOnChange }) => {\r\n  const filtered = useSelector((state: any) => state.contacts.filter);\r\n\r\n  return (\r\n    <div className=\"input-container\">\r\n      <input\r\n        type=\"text\"\r\n        id=\"name\"\r\n        placeholder=\" \"\r\n        value={filtered}\r\n        onChange={handleOnChange}\r\n      />\r\n      <label htmlFor=\"name\">Name</label>\r\n      <div className=\"underline\"></div>\r\n    </div>\r\n  );\r\n};\r\n","export const randomOnline = (): string | undefined => {\r\n  const random = Math.floor(Math.random() * 10);\r\n  if (random > 7) {\r\n    return \"#00FF00\";\r\n  } else if (random < 7) {\r\n    return \"#333333\";\r\n  }\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { randomOnline } from \"../supportTS/randomOnline\";\r\n\r\ninterface ListContactProps {\r\n  API: string;\r\n  handleDeleteClick: (contactId: string) => void;\r\n}\r\n\r\nexport const ListContact: React.FC<ListContactProps> = ({\r\n  API,\r\n  handleDeleteClick,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Link to={`${API}`} className=\"contact\" key={API}>\r\n        <span className=\"name\">{API}</span>\r\n        <span className=\"status\" style={{ color: randomOnline() }}>\r\n          Online\r\n        </span>\r\n        <button\r\n          className=\"btn_item\"\r\n          id={API}\r\n          onClick={() => handleDeleteClick(API)}\r\n        >\r\n          X\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n","import { FC, useEffect, useState, ChangeEvent, Suspense } from \"react\";\r\nimport { Link, Outlet } from \"react-router-dom\";\r\nimport { SearchComponent } from \"./Search/SearchComponent\";\r\nimport { Loader } from \"../Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchBase,\r\n  APIEntry,\r\n  deleteItem,\r\n  handleChange,\r\n} from \"../sliceRedux/sliceRedux\";\r\nimport \"./sidebar.css\";\r\nimport { ListContact } from \"./ListContact/ListContact\";\r\nconst Sidebar: FC = () => {\r\n  const contacts = useSelector((state: any) => state.contacts.contacts);\r\n  const name = useSelector((state: any) => state.contacts.filter);\r\n  const dispatch = useDispatch<any>();\r\n  const [list, setList] = useState<APIEntry[]>(contacts);\r\n\r\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    const search: string = e.currentTarget.value.toLowerCase();\r\n    dispatch(handleChange(search));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBase());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const filteringItems = () => {\r\n      const filterItem = contacts.filter(({ API }: any) =>\r\n        API.toLowerCase().includes(name.toLowerCase())\r\n      );\r\n      setList(filterItem);\r\n    };\r\n    filteringItems();\r\n  }, [contacts, name]);\r\n\r\n  const handleDeleteClick = (contactId: string): void => {\r\n    dispatch(deleteItem(contactId));\r\n  };\r\n\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <div className=\"main\">\r\n        <header className=\"header\">Messenger</header>\r\n        <div className=\"container\">\r\n          <div className=\"sidebar\">\r\n            <SearchComponent handleOnChange={handleOnChange} />\r\n            {list.map(({ API }) => (\r\n              <ListContact\r\n                handleDeleteClick={handleDeleteClick}\r\n                API={API}\r\n                key={API}\r\n              />\r\n            ))}\r\n          </div>\r\n          <Suspense fallback={<Loader />}>\r\n            <Outlet />\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["Loader","_jsxs","className","children","_jsx","SearchComponent","_ref","handleOnChange","filtered","useSelector","state","contacts","filter","type","id","placeholder","value","onChange","htmlFor","randomOnline","random","Math","floor","ListContact","API","handleDeleteClick","_Fragment","Link","to","concat","style","color","onClick","name","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","list","setList","useEffect","fetchBase","filterItem","toLowerCase","includes","filteringItems","contactId","deleteItem","e","search","currentTarget","handleChange","map","_ref2","Suspense","fallback","Outlet"],"sourceRoot":""}