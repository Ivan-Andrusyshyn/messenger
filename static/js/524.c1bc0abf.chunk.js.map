{"version":3,"file":"static/js/524.c1bc0abf.chunk.js","mappings":"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","sources":["components/Loader/Loader.tsx","components/SideBar/Search/SearchComponent.tsx","components/SideBar/MaterialUi/list.styled.tsx","components/SideBar/supportTS/randomOnline.ts","components/SideBar/MaterialUi/ListMaterial.tsx","components/SideBar/Sidebar.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport \"./loader.css\";\r\nconst Loader: FC = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"part\"></div>\r\n      <div className=\"part\"></div>\r\n      <div className=\"part\"></div>\r\n    </div>\r\n  );\r\n};\r\nexport { Loader };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./search.css\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Avatar } from \"@mui/material\";\r\ninterface Props {\r\n  handleOnChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const SearchComponent: React.FC<Props> = ({ handleOnChange }) => {\r\n  const filtered = useSelector((state: any) => state.contacts.filter);\r\n  const avatarSrc = useSelector((state: any) => state.contacts.avatarSrc);\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  useEffect(() => {\r\n    const avatar =\r\n      avatarSrc === 0 ? `https://picsum.photos/id/2${avatarSrc}/200/300` : \"\";\r\n    setAvatar(avatar);\r\n  }, [avatarSrc]);\r\n  const [isInputFocused, setIsInputFocused] = useState(false);\r\n\r\n  const handleInputFocus = () => {\r\n    setIsInputFocused(!isInputFocused);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", alignItems: \"flex-end\", mb: \"10px\" }}>\r\n      <Avatar\r\n        sx={{ width: \"30px\", height: \"30px\", mr: \"10px\" }}\r\n        src={`${avatar}`}\r\n      />\r\n      <TextField\r\n        value={filtered}\r\n        id=\"input-with-sx\"\r\n        onChange={handleOnChange}\r\n        label=\"Search contact\"\r\n        variant=\"standard\"\r\n        InputLabelProps={{\r\n          style: {\r\n            fontSize: \"14px\",\r\n            color: isInputFocused ? \"#FF5722\" : \"\",\r\n          },\r\n          className: isInputFocused ? \"label-focused\" : \"\",\r\n        }}\r\n        inputProps={{\r\n          onFocus: handleInputFocus,\r\n          onBlur: handleInputFocus,\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n","import ListItem from \"@mui/material/ListItem\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { css } from \"@emotion/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport PermContactCalendarIcon from \"@mui/icons-material/PermContactCalendar\";\r\nimport { randomOnline } from \"../supportTS/randomOnline\";\r\nexport const CustomListItem = styled(ListItem)`\r\n  background-color: #ff5722;\r\n  color: #ffffff;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ffc107;\r\n  padding: 5px;\r\n  font-weight: 700;\r\n  display: flex;\r\n  font-size: 8px;\r\n  justify-content: space-between;\r\n  border-radius: 4px;\r\n  transition: background-color, border-color, 0.2s linear;\r\n  &:hover {\r\n    background-color: #ff9800;\r\n    border-color: #4caf50;\r\n  }\r\n`;\r\nexport const Demo = styled(\"div\")(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.paper,\r\n}));\r\nexport const CustomLink = styled(Link)`\r\n  text-decoration: none;\r\n  letter-spacing: 0.2em;\r\n  font-weight: 700;\r\n`;\r\nexport const CustomIconButton = styled(IconButton)`\r\n  text-decoration: none;\r\n  letter-spacing: 0.2em;\r\n  width: 12px;\r\n  position: absolute;\r\n  color: #fff;\r\n  font-weight: 700;\r\n  transition: color, transform, 0.3s linear;\r\n  &:hover {\r\n    color: red;\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\nexport const CustomContactsIcon = styled(PermContactCalendarIcon)`\r\n  fill: ${({ theme }) => randomOnline()};\r\n  width: 15px;\r\n  position: absolute;\r\n  right: 2px;\r\n  top: 2px;\r\n`;\r\n","export const randomOnline = (): string | undefined => {\r\n  const random = Math.floor(Math.random() * 10);\r\n  if (random >= 6) {\r\n    return \"#00FF00\";\r\n  } else {\r\n    return \"#fffff\";\r\n  }\r\n};\r\n","import ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { CustomIconButton } from \"./list.styled\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport {\r\n  CustomContactsIcon,\r\n  Demo,\r\n  CustomListItem,\r\n  CustomLink,\r\n} from \"./list.styled\";\r\nimport \"./listItem.css\";\r\ninterface ListContactProps {\r\n  name: string;\r\n  handleDeleteClick: (contactId: string) => void;\r\n  num: number;\r\n  takeAvatar: (id: number) => void;\r\n}\r\n\r\nexport const AlignItemsList: React.FC<ListContactProps> = ({\r\n  name,\r\n  handleDeleteClick,\r\n  num,\r\n  takeAvatar,\r\n}) => {\r\n  React.useEffect(() => {\r\n    takeAvatar(num);\r\n  });\r\n  return (\r\n    <>\r\n      <CustomLink\r\n        to={`${name}`}\r\n        className=\"contact\"\r\n        state={{ avatar: `https://picsum.photos/id/2${num}/200/300` }}\r\n      >\r\n        <Grid item xs={12} md={6}>\r\n          <Demo>\r\n            <CustomListItem\r\n              secondaryAction={\r\n                <CustomIconButton\r\n                  aria-label=\"delete\"\r\n                  size=\"small\"\r\n                  onClick={() => handleDeleteClick(name)}\r\n                >\r\n                  <DeleteIcon fontSize=\"inherit\" />\r\n                </CustomIconButton>\r\n              }\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  alt={`Avatar nÂ°${num}`}\r\n                  src={`https://picsum.photos/id/2${num}/200/300`}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText primary={name.slice(0, 17)} secondary=\"\" />\r\n              <CustomContactsIcon fontSize=\"small\" />\r\n            </CustomListItem>\r\n          </Demo>\r\n        </Grid>\r\n      </CustomLink>\r\n    </>\r\n  );\r\n};\r\n","import { FC, useEffect, useState, ChangeEvent, Suspense } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { SearchComponent } from \"./Search/SearchComponent\";\r\nimport { Loader } from \"../Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchBase,\r\n  APIEntry,\r\n  deleteItem,\r\n  handleChange,\r\n  takeAvatarSrc,\r\n} from \"../../storeRedux/sliceRedux/sliceRedux\";\r\n\r\nimport \"./sidebar.css\";\r\nimport { AlignItemsList } from \"./MaterialUi/ListMaterial\";\r\nconst Sidebar: FC = () => {\r\n  const contacts = useSelector((state: any) => state.contacts.contacts);\r\n  const nameContact = useSelector((state: any) => state.contacts.filter);\r\n  const dispatch = useDispatch<any>();\r\n  const [list, setList] = useState<APIEntry[]>(contacts);\r\n\r\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    const search: string = e.currentTarget.value.toLowerCase();\r\n    dispatch(handleChange(search));\r\n  };\r\n  useEffect(() => {\r\n    dispatch(fetchBase());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const filteringItems = () => {\r\n      const filterItem = contacts.filter(({ name }: any) =>\r\n        name.toLowerCase().includes(nameContact.toLowerCase())\r\n      );\r\n      setList(filterItem);\r\n    };\r\n    filteringItems();\r\n  }, [contacts, nameContact]);\r\n\r\n  const handleDeleteClick = (contactId: string): void => {\r\n    dispatch(deleteItem(contactId));\r\n  };\r\n  const takeAvatar = (id: number): void => {\r\n    dispatch(takeAvatarSrc(id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <div className=\"main\">\r\n        <header className=\"header\">Messenger</header>\r\n        <div className=\"container\">\r\n          <div className=\"sidebar\">\r\n            <SearchComponent handleOnChange={handleOnChange} />\r\n            {list.map(({ name, id }, index) => (\r\n              <AlignItemsList\r\n                handleDeleteClick={handleDeleteClick}\r\n                name={name}\r\n                num={index}\r\n                key={name}\r\n                takeAvatar={takeAvatar}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div>\r\n            <Suspense fallback={<Loader />}>\r\n              <Outlet />\r\n            </Suspense>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["Loader","_jsxs","className","children","_jsx","SearchComponent","_ref","handleOnChange","filtered","useSelector","state","contacts","filter","avatarSrc","_useState","useState","_useState2","_slicedToArray","avatar","setAvatar","useEffect","concat","_useState3","_useState4","isInputFocused","setIsInputFocused","handleInputFocus","Box","sx","display","alignItems","mb","Avatar","width","height","mr","src","TextField","value","id","onChange","label","variant","InputLabelProps","style","fontSize","color","inputProps","onFocus","onBlur","CustomListItem","styled","ListItem","_templateObject","_taggedTemplateLiteral","Demo","backgroundColor","theme","palette","background","paper","CustomLink","Link","_templateObject2","CustomIconButton","IconButton","_templateObject3","CustomContactsIcon","PermContactCalendarIcon","_templateObject4","_ref2","Math","floor","random","AlignItemsList","name","handleDeleteClick","num","takeAvatar","React","_Fragment","to","Grid","item","xs","md","secondaryAction","size","onClick","DeleteIcon","ListItemAvatar","alt","ListItemText","primary","slice","secondary","nameContact","dispatch","useDispatch","list","setList","fetchBase","filterItem","toLowerCase","includes","filteringItems","contactId","deleteItem","takeAvatarSrc","e","search","currentTarget","handleChange","map","index","Suspense","fallback","Outlet"],"sourceRoot":""}