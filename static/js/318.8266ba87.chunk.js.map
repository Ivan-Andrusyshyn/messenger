{"version":3,"file":"static/js/318.8266ba87.chunk.js","mappings":"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","sources":["components/Loader/Loader.tsx","components/SideBar/Search/SearchComponent.tsx","components/SideBar/MaterialUi/listItem.styled.tsx","components/SideBar/supportTS/randomOnline.ts","components/SideBar/MaterialUi/ListMaterial.tsx","components/SideBar/Sidebar.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport \"./loader.css\";\r\nconst Loader: FC = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"part\"></div>\r\n      <div className=\"part\"></div>\r\n      <div className=\"part\"></div>\r\n    </div>\r\n  );\r\n};\r\nexport { Loader };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./search.css\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Avatar } from \"@mui/material\";\r\ninterface Props {\r\n  handleOnChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const SearchComponent: React.FC<Props> = ({ handleOnChange }) => {\r\n  const filtered = useSelector((state: any) => state.contacts.filter);\r\n  const avatarSrc = useSelector((state: any) => state.contacts.avatarSrc);\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  useEffect(() => {\r\n    const avatar =\r\n      avatarSrc === 0 ? `https://picsum.photos/id/2${avatarSrc}/200/300` : \"\";\r\n    setAvatar(avatar);\r\n  });\r\n  return (\r\n    <Box sx={{ display: \"flex\", alignItems: \"flex-end\", mb: \"10px\" }}>\r\n      <Avatar\r\n        sx={{ width: \"30px\", height: \"30px\", mr: \"10px\" }}\r\n        src={`${avatar}`}\r\n      />\r\n      <TextField\r\n        value={filtered}\r\n        id=\"input-with-sx\"\r\n        onChange={handleOnChange}\r\n        label=\"With sx\"\r\n        variant=\"standard\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n","import ListItem from \"@mui/material/ListItem\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { css } from \"@emotion/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport PermContactCalendarIcon from \"@mui/icons-material/PermContactCalendar\";\r\nimport { randomOnline } from \"../supportTS/randomOnline\";\r\nexport const CustomListItem = styled(ListItem)`\r\n  background-color: #ff5722;\r\n  color: #ffffff;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ffc107;\r\n  padding: 5px;\r\n  font-weight: 700;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-radius: 4px;\r\n  transition: background-color, border-color, 0.2s linear;\r\n  &:hover {\r\n    background-color: #ff9800;\r\n    border-color: #4caf50;\r\n  }\r\n`;\r\nexport const CustomLink = styled(Link)`\r\n  text-decoration: none;\r\n  letter-spacing: 0.2em;\r\n  font-weight: 700;\r\n`;\r\nexport const CustomIconButton = styled(IconButton)`\r\n  text-decoration: none;\r\n  letter-spacing: 0.2em;\r\n  width: 12px;\r\n  position: absolute;\r\n  color: #fff;\r\n  font-weight: 700;\r\n  transition: color, transform, 0.3s linear;\r\n  &:hover {\r\n    color: red;\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\nexport const CustomContactsIcon = styled(PermContactCalendarIcon)`\r\n  fill: ${({ theme }) => randomOnline()};\r\n  width: 15px;\r\n  position: absolute;\r\n  right: 2px;\r\n  top: 2px;\r\n`;\r\n","export const randomOnline = (): string | undefined => {\r\n  const random = Math.floor(Math.random() * 10);\r\n  if (random >= 6) {\r\n    return \"#00FF00\";\r\n  } else {\r\n    return \"#fffff\";\r\n  }\r\n};\r\n","import ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { CustomIconButton } from \"./listItem.styled\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { CustomContactsIcon } from \"./listItem.styled\";\r\nimport { CustomListItem } from \"./listItem.styled\";\r\nimport { CustomLink } from \"./listItem.styled\";\r\nimport \"./listItem.css\";\r\ninterface ListContactProps {\r\n  API: string;\r\n  handleDeleteClick: (contactId: string) => void;\r\n  num: number;\r\n  takeAvatar: (id: number) => void;\r\n}\r\n\r\nexport const AlignItemsList: React.FC<ListContactProps> = ({\r\n  API,\r\n  handleDeleteClick,\r\n  num,\r\n  takeAvatar,\r\n}) => {\r\n  const Demo = styled(\"div\")(({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n  }));\r\n  React.useEffect(() => {\r\n    takeAvatar(num);\r\n  });\r\n  return (\r\n    <>\r\n      <CustomLink to={`${API}`} className=\"contact\">\r\n        <Grid item xs={12} md={6}>\r\n          <Demo>\r\n            <CustomListItem\r\n              secondaryAction={\r\n                <CustomIconButton\r\n                  aria-label=\"delete\"\r\n                  size=\"small\"\r\n                  onClick={() => handleDeleteClick(API)}\r\n                >\r\n                  <DeleteIcon fontSize=\"inherit\" />\r\n                </CustomIconButton>\r\n              }\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  alt={`Avatar nÂ°${num}`}\r\n                  src={`https://picsum.photos/id/2${num}/200/300`}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText primary={API} secondary=\"\" />\r\n              <CustomContactsIcon fontSize=\"small\" />\r\n            </CustomListItem>\r\n          </Demo>\r\n        </Grid>\r\n      </CustomLink>\r\n    </>\r\n  );\r\n};\r\n","import { FC, useEffect, useState, ChangeEvent, Suspense } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { SearchComponent } from \"./Search/SearchComponent\";\r\nimport { Loader } from \"../Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchBase,\r\n  APIEntry,\r\n  deleteItem,\r\n  handleChange,\r\n  takeAvatarSrc,\r\n} from \"../../storeRedux/sliceRedux/sliceRedux\";\r\n\r\nimport \"./sidebar.css\";\r\nimport { AlignItemsList } from \"./MaterialUi/ListMaterial\";\r\nconst Sidebar: FC = () => {\r\n  const contacts = useSelector((state: any) => state.contacts.contacts);\r\n  const name = useSelector((state: any) => state.contacts.filter);\r\n  const dispatch = useDispatch<any>();\r\n  const [list, setList] = useState<APIEntry[]>(contacts);\r\n\r\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    const search: string = e.currentTarget.value.toLowerCase();\r\n    dispatch(handleChange(search));\r\n  };\r\n  useEffect(() => {\r\n    dispatch(fetchBase());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const filteringItems = () => {\r\n      const filterItem = contacts.filter(({ API }: any) =>\r\n        API.toLowerCase().includes(name.toLowerCase())\r\n      );\r\n      setList(filterItem);\r\n    };\r\n    filteringItems();\r\n  }, [contacts, name]);\r\n\r\n  const handleDeleteClick = (contactId: string): void => {\r\n    dispatch(deleteItem(contactId));\r\n  };\r\n  const takeAvatar = (id: number): void => {\r\n    dispatch(takeAvatarSrc(id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <div className=\"main\">\r\n        <header className=\"header\">Messenger</header>\r\n        <div className=\"container\">\r\n          <div className=\"sidebar\">\r\n            <SearchComponent handleOnChange={handleOnChange} />\r\n            {list.map(({ API }, index) => (\r\n              <AlignItemsList\r\n                handleDeleteClick={handleDeleteClick}\r\n                API={API}\r\n                num={index}\r\n                key={API}\r\n                takeAvatar={takeAvatar}\r\n              />\r\n            ))}\r\n          </div>\r\n          <Suspense fallback={<Loader />}>\r\n            <Outlet />\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["Loader","_jsxs","className","children","_jsx","SearchComponent","_ref","handleOnChange","filtered","useSelector","state","contacts","filter","avatarSrc","_useState","useState","_useState2","_slicedToArray","avatar","setAvatar","useEffect","concat","Box","sx","display","alignItems","mb","Avatar","width","height","mr","src","TextField","value","id","onChange","label","variant","CustomListItem","styled","ListItem","_templateObject","_taggedTemplateLiteral","CustomLink","Link","_templateObject2","CustomIconButton","IconButton","_templateObject3","CustomContactsIcon","PermContactCalendarIcon","_templateObject4","theme","Math","floor","random","AlignItemsList","API","handleDeleteClick","num","takeAvatar","Demo","_ref2","backgroundColor","palette","background","paper","React","_Fragment","to","Grid","item","xs","md","secondaryAction","size","onClick","DeleteIcon","fontSize","ListItemAvatar","alt","ListItemText","primary","secondary","name","dispatch","useDispatch","list","setList","fetchBase","filterItem","toLowerCase","includes","filteringItems","contactId","deleteItem","takeAvatarSrc","e","search","currentTarget","handleChange","map","index","Suspense","fallback","Outlet"],"sourceRoot":""}